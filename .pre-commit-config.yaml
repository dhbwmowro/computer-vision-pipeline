# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

default_stages: [commit, manual]

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.2.3
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml # Checks yaml files for parseable syntax.
      - id: check-json # Checks json files for parseable syntax.
      - id: check-added-large-files
      - id: check-case-conflict # Check for files that would conflict in case-insensitive filesystems
      - id: check-merge-conflict # Check for files that contain merge conflict strings.
      - id: debug-statements # Check for debugger imports and py37+ `breakpoint()` calls in python source.
      - id: requirements-txt-fixer # Sorts entries in requirements.txt
      - id: flake8
        args:
          - '--max-line-length=88'
          - '--max-complexity=18'
          - '--max-complexity=18'
          - '--select=B,C,E,F,W,T4,B9'
          - '--ignore=E203,E266,E501,W503'

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.942
    hooks:
      - id: mypy
        args: [--allow-redefinition, --ignore-missing-imports]
        exclude: |
          (?x)(
            ^docs/|
          )

  - repo: https://github.com/asottile/blacken-docs
    rev: v1.12.1
    hooks:
      - id: blacken-docs
        additional_dependencies: [black==21.5b1]
        entry: blacken-docs --skip-errors

  - repo: https://github.com/asottile/pyupgrade
    rev: v2.32.0
    hooks:
      - id: pyupgrade
        args: [--py36-plus]

  - repo: local
    hooks:
      - id: isort
        name: 'Sort imports'
        language: system
        types: [file, python]
        exclude: ^src
        entry: isort
      - id: black
        name: 'Black'
        language: system
        files: ^src/
        types: [file, python]
        entry: black
      - id: bandit
        name: 'Bandit security check'
        language: system
        types: [file, python]
        entry: bandit -ll

      # It's impossible to specify per-directory configuration, so we just run it many times.
      # https://github.com/PyCQA/pylint/issues/618
      # The first set of pylint checks if for local pre-commit, it only runs on the files changed.
      - id: pylint-quick-kedro
        name: 'Quick Pylint on src/*'
        language: system
        types: [file, python]
        files: ^src/
        entry: pylint -j 4 --disable=unnecessary-pass
        stages: [commit]

      # The same pylint checks, but running on all files. It's for manual run with `make lint`
      - id: pylint-kedro
        name: 'Pylint on kedro/*'
        language: system
        pass_filenames: false
        stages: [manual]
        entry: pylint -j 4 --disable=unnecessary-pass --init-hook="import sys; sys.setrecursionlimit(2000)" kedro
